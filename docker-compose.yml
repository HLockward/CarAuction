services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgressql/data
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB__ROOT_USERNAME=root
      - MONGO_INITDB__ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  auction-svc:
    image: hlockward/auction-svc:latest
    build: 
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMQ__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=auctions;Username=postgres;Password=postgrespw
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 7001:80
      - 7777:7777
    depends_on:
      - postgres
      - rabbitmq 
  search-svc:
    image: hlockward/search-svc:latest
    build: 
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMQ__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://mongo:27017/
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 7002:80
    depends_on:
      - mongo
      - rabbitmq
  identity-svc:
    image: hlockward/identity-svc:latest
    build: 
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - IssuerUri=http://id.carauction.local
      - ClientApp=http://app.carauction.local
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=identity;Username=postgres;Password=postgrespw
      - VIRTUAL_HOST=id.carauction.local
    depends_on:
      - postgres
  gateway-svc:
    image: hlockward/gateway-svc:latest
    build: 
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientApp=http://app.carauction.local
      - VIRTUAL_HOST=api.carauction.local
  bid-svc:
    image: hlockward/bid-svc:latest
    build: 
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMQ__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://mongo:27017/
      - IdentityServiceUrl=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
    ports:
      - 7003:80
    depends_on:
      - mongo
      - rabbitmq
  notify-svc:
    image: hlockward/notify-svc:latest
    build: 
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMQ__Host=rabbitmq
    ports:
      - 7004:80
    depends_on:
      - rabbitmq
  web-app:
    image: hlockward/web-app
    build: 
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - /var/lib/web/data:/app/data
    environment:
      - AUTH_SECRET=j+CHdYP1gHK8Ukb3qMz+NjdLtN+g8+rUARp60dtoFsI=
      - AUTH_URL=http://app.carauction.local
      - AUTH_URL_INTERNAL=http://web-app:3000
      - API_URL=http://gateway-svc/
      - ID_URL=http://id.carauction.local
      - ID_URL_INTERNAL=http://identity-svc
      - NOTIFY_URL=http://api.carauction.local/notifications
      - VIRTUAL_HOST=app.carauction.local
      - VIRTUAL_PORT=3000
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro               
volumes:
  pgdata:
  mongodata:
